var searchIndex = JSON.parse('{\
"crazyqc":{"doc":"Crazyqc compute some simple quality control information on …","t":[0,0,0,3,11,11,12,11,11,12,11,11,11,12,11,11,11,5,11,11,11,11,12,5,12,11,11,11,11,12,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["cli","error","input","Command","augment_args","augment_args_for_update","bam","borrow","borrow_mut","buffer_size","deref","deref_mut","drop","fastq","fmt","from","from_arg_matches","i82level","init","into","into_app","into_app_for_update","output","set_nb_threads","threads","try_from","try_into","type_id","update_from_arg_matches","verbosity","BamOpenError","BamParsingError","Error","FastqOpenError","FastqParsingError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","to_string","try_from","try_into","type_id","path","path","bam","fastq","Bam","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_iter","new","next","try_from","try_into","type_id","worker","Fastq","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_iter","new","next","try_from","try_into","type_id","worker"],"q":["crazyqc","","","crazyqc::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","crazyqc::error","","","","","","","","","","","","","","","","","","","crazyqc::error::Error","","crazyqc::input","","crazyqc::input::bam","","","","","","","","","","","","","","","","crazyqc::input::fastq","","","","","","","","","","","","","","",""],"d":["All stuff relate to command line","Define error type","Code to parse input","Struct use to parse command line argument","","","Bam input","","","Size of reading buffer in bytes, default: 8192","","","","Fastq input","","","","Convert verbosity level (number of v) is log::Level","","","","","Path where result will be write, default: stdout","Set number of global rayon thread pool","Number of thread use by crazyqc, 0 use all avaible core, …","","","","","Verbosity level also control by environment variable …","Failled to open bam file","Bam parsing error","Error enum","Failled to open fastq file","Fastq parsing error","","","","","","","","","","","","","","","","","Parse bam","Parse fastq","Struct to parse Bam file","","","","","","","","","","Create a Bam struct, with inputs path and size of read …","","","","","","Struct to parse Fastq file","","","","","","","","","","Create a Fastq struct, with inputs path and size of read …","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,4,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0],"f":[null,null,null,null,[[["app",3]],["app",3]],[[["app",3]],["app",3]],null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[["argmatches",3]],["result",4,[["error",3]]]],[[["i8",15]],["option",4,[["level",4]]]],[[],["usize",15]],[[]],[[],["app",3]],[[],["app",3]],null,[[["usize",15]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["argmatches",3]],["result",4,[["error",3]]]],null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[["vec",3,[["string",3]]],["usize",15]],["result",6]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["result",6,[["record",3]]]]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[["vec",3,[["string",3]]],["usize",15]],["result",6]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["result",6,[["vec",3,[["u8",15]]]]]]]],"p":[[3,"Command"],[4,"Error"],[13,"FastqOpenError"],[13,"BamOpenError"],[3,"Bam"],[3,"Fastq"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};